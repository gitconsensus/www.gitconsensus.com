{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/link.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/images/logo.png","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/theme.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","a","createElement","title","m","module","require","default","Link","react__WEBPACK_IMPORTED_MODULE_1___default","forwardRef","props","ref","_material_ui_core_Link__WEBPACK_IMPORTED_MODULE_2__","Object","assign","underline","component","gatsby__WEBPACK_IMPORTED_MODULE_3__","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","loader","enqueue","React","exports","p","_ref","location","pageResources","_page_renderer__WEBPACK_IMPORTED_MODULE_2__","json","SEO","description","lang","meta","site","_public_static_d_3978990474_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","src_theme","createMuiTheme","palette","primary","main","secondary","error","useStyles","makeStyles","theme","root","flexGrow","link","display","alignItems","marginLeft","Header","siteTitle","classes","react_default","className","AppBar","appBar","position","Container","maxWidth","Toolbar","disableGutters","components_link","to","color","Avatar","avatar","src","logo_default","alt","Typography","variant","Button","href","header","children","_2170589039","Fragment","ThemeProvider","CssBaseline","Date","getFullYear"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAaAE,EAAA,QARqB,kBACnBE,EAAAI,EAAAC,cAAAH,EAAA,OACEF,EAAAI,EAAAC,cAAAF,EAAA,GAAKG,MAAM,mBACXN,EAAAI,EAAAC,cAAA,UAFF,aAGEL,EAAAI,EAAAC,cAAA,SAJiB,kFCLrB,IAAsBE,EAKpBC,WALoBD,EAKWE,EAA/BD,OAL+BD,EAANG,SAAJH,gFCIjBI,EAAOC,EAAAR,EAAAS,WAAiB,SAAAC,EAAAC,GAC5B,OAAOH,EAAAR,EAAAC,cAAAW,EAAA,EAAAC,OAAAC,OAAA,CAASC,UAAT,OAA0BC,UAA1BC,EAAA,EAAiDN,IAAKA,GAA7DD,MAGFhB,EAAA,sCCRA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAuB,EAAA1B,EAAA,KAAA2B,EAAA3B,EAAAK,EAAAqB,GAAA1B,EAAA4B,EAAA1B,EAAA,sBAAAyB,EAAAnB,IAAAR,EAAA,KAAAA,EAAA,IAcyB6B,QAAzBC,QAE2BC,kBAA3B,gKChBAnB,EAAAoB,QAAiBhC,EAAAiC,EAAuB,+HCsBxC/B,EAAA,QAjByB,SAAAgC,GAAiC,IAA9BC,EAA8BD,EAA9BC,SAAUC,EAAoBF,EAApBE,cACpC,OAAAA,EAGOpB,EAAAR,EAAAC,cAAA4B,EAAA,EAAAhB,OAAAC,OAAA,CACLa,SADKA,EAELC,iBACGA,EAHLE,OAFE,uFCKJ,SAAAC,EAAAL,GAAiD,IAAlCM,EAAkCN,EAAlCM,YAAaC,EAAqBP,EAArBO,KAAMC,EAAeR,EAAfQ,KAAMhC,EAASwB,EAATxB,MAC9BiC,EADuCC,EAAAC,KAAAF,KAczCG,EAAkBN,GAAeG,eAAvCH,YAEA,OACExB,EAAAR,EAAAC,cAAAsC,EAAAvC,EAAA,CACEwC,eAAgB,CACdP,QAEF/B,MAJFA,EAKEuC,cAAa,QAAUN,eALzBjC,MAMEgC,KAAM,CACJ,CACEQ,KADF,cAEEC,QAASL,GAEX,CACEM,SADF,WAEED,QAASzC,GAEX,CACE0C,SADF,iBAEED,QAASL,GAEX,CACEM,SADF,UAEED,QAAO,WAET,CACED,KADF,eAEEC,QAAO,WAET,CACED,KADF,kBAEEC,QAASR,eAAkBU,QAE7B,CACEH,KADF,gBAEEC,QAASzC,GAEX,CACEwC,KADF,sBAEEC,QAASL,IA/BPQ,OAAAZ,KAsCZH,eAAmB,CACjBE,KADiB,KAEjBC,KAFiB,GAGjBF,YAAW,IAUbtC,EAAA,8OCrEAqD,EAdcC,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAERE,MAAO,CACLF,KAAM,wGCING,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,GAEZC,KAAM,CACJC,QADI,OAEJC,WAFI,SAGJH,SAAU,GAEZxD,MAAO,CACL4D,WAAYN,iBAKVO,EAAS,SAAArC,GAAmB,IAAhBsC,EAAgBtC,EAAhBsC,UACVC,EAAUX,IAChB,OACEY,EAAAlE,EAAAC,cAAA,OAAKkE,UAAWF,EAAQR,MACtBS,EAAAlE,EAAAC,cAAAmE,EAAA,GAAQD,UAAWF,EAAnBI,OAAmCC,SAAS,SAC1CJ,EAAAlE,EAAAC,cAAAsE,EAAA,GAAWC,SAAS,MAClBN,EAAAlE,EAAAC,cAAAwE,EAAA,GAASC,gBAAc,GACrBR,EAAAlE,EAAAC,cAAA0E,EAAA,GAAYR,UAAWF,EAAvBN,KAAqCiB,GAArC,IAA4CC,MAAM,aAChDX,EAAAlE,EAAAC,cAAA6E,EAAA,GAAQX,UAAWF,EAAnBc,OAAmCC,IAAnCC,EAAAjF,EAA8CkF,IAAI,SAClDhB,EAAAlE,EAAAC,cAAAkF,EAAA,GAAYC,QAAZ,KAAyBjB,UAAWF,EAAQ/D,OAHhD8D,IAKEE,EAAAlE,EAAAC,cAAAoF,EAAA,GACErE,UADF,SAEEoE,QAFF,WAGEE,KAHF,uCAIET,MAAM,aAblB,4BA6BFd,eAAsB,CACpBC,UADoB,GAEpBhC,YAAW,IAGb,IAAAuD,EAAA,SCZA7F,EAAA,EAnCe,SAAAgC,GAAkB,IAAf8D,EAAe9D,EAAf8D,SACVnD,EAAIoD,EAAVpD,KAWA,OACE6B,EAAAlE,EAAAC,cAAAiE,EAAAlE,EAAA0F,SAAA,KACExB,EAAAlE,EAAAC,cAAA0F,EAAA,GAAenC,MAAOA,GACpBU,EAAAlE,EAAAC,cAAA2F,EAAA,EADF,MAEE1B,EAAAlE,EAAAC,cAAAsF,EAAA,CAAQvB,UAAW3B,oBAAnBnC,MAAiD8B,YAAaK,oBAAuBL,cACrFkC,EAAAlE,EAAAC,cAAAsE,EAAA,GAAWC,SAAS,MAClBN,EAAAlE,EAAAC,cAAA,YADFuF,GAEEtB,EAAAlE,EAAAC,cAAA,oBACK,IAAA4F,MADLC,cAAA,mBAGE5B,EAAAlE,EAAAC,cAAA,KAAGqF,KAAK,4BAVlB","file":"component---src-pages-404-js-1e5189f59513eafac441.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react'\nimport MuiLink from '@material-ui/core/Link'\nimport { Link as GatsbyLink } from 'gatsby'\n\nconst Link = React.forwardRef(function Link(props, ref) {\n  return <MuiLink underline=\"none\" component={GatsbyLink} ref={ref} {...props} />\n})\n\nexport default Link","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","module.exports = __webpack_public_path__ + \"static/logo-541c168ba3f7b5c6d3417f37d8fa0c5c.png\";","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { createMuiTheme } from '@material-ui/core/styles'\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#80d8ff',\n    },\n    secondary: {\n      main: '#212121',\n    },\n    error: {\n      main: '#d81b60',\n    }\n  },\n});\n\nexport default theme;","import PropTypes from \"prop-types\"\nimport React from \"react\"\n\nimport logo from '../images/logo.png'\nimport GatsbyLink from './link'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport Avatar from '@material-ui/core/Avatar'\nimport Button from '@material-ui/core/Button'\nimport Container from '@material-ui/core/Container'\nimport Link from '@material-ui/core/Link'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  link: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexGrow: 1\n  },\n  title: {\n    marginLeft: theme.spacing(1)\n  }\n}))\n\n\nconst Header = ({ siteTitle }) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <AppBar className={classes.appBar} position=\"fixed\">\n        <Container maxWidth=\"md\">\n          <Toolbar disableGutters>\n            <GatsbyLink className={classes.link} to=\"/\" color=\"secondary\">\n              <Avatar className={classes.avatar} src={logo} alt=\"logo\" />\n              <Typography variant=\"h6\" className={classes.title}>{siteTitle}</Typography>\n            </GatsbyLink>\n            <Button\n              component=\"button\"\n              variant=\"outlined\"\n              href=\"https://github.com/apps/gitconsensus\"\n              color=\"secondary\"\n              >\n                Configure On GitHub\n              </Button>\n          </Toolbar>\n        </Container>\n      </AppBar>\n    </div>\n  )\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n  description: PropTypes.string\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n  description: ``\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { ThemeProvider } from '@material-ui/styles'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Container from '@material-ui/core/Container'\n// import Typography from '@material-ui/core/Typography'\nimport theme from '../theme'\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          description\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Header siteTitle={data.site.siteMetadata.title} description={data.site.siteMetadata.description} />\n        <Container maxWidth=\"md\">\n          <main>{children}</main>\n          <footer>\n            © {new Date().getFullYear()}, Built with\n          {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </Container>\n      </ThemeProvider>\n      \n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}